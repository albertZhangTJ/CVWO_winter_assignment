{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/vsworkspace/CVWO/winter-session-assignment/frontend/src/pages/View_month.js\";\n//referred to some code from https://react-table.tanstack.com/docs/examples/full-width-table\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactTable from \"react-table\";\nimport styled from 'styled-components';\nimport { parse_vcal } from \"../vcalendar_parser.js\";\nimport Calendar from 'react-calendar'; //import 'react-calendar/dist/Calendar.css';\n// const Styles = styled.div`\n//   /* This is required to make the table full-width */\n//   display: block;\n//   max-width: 100%;\n//   /* This will make the table scrollable when it gets too small */\n//   .tableWrap {\n//     display: block;\n//     max-width: 100%;\n//     overflow-x: scroll;\n//     overflow-y: hidden;\n//     border-bottom: 1px solid black;\n//   }\n//   table {\n//     /* Make sure the inner table is always as wide as needed */\n//     width: 100%;\n//     border-spacing: 0;\n//     tr {\n//       :last-child {\n//         td {\n//           border-bottom: 0;\n//         }\n//       }\n//     }\n//     th,\n//     td {\n//       margin: 0;\n//       padding: 0.5rem;\n//       border-bottom: 1px solid black;\n//       border-right: 1px solid black;\n//       /* The secret sauce */\n//       /* Each cell should grow equally */\n//       width: 1%;\n//       /* But \"collapsed\" cells should be as small as possible */\n//       &.collapse {\n//         width: 0.0000000001%;\n//       }\n//       :last-child {\n//         border-right: 0;\n//       }\n//     }\n//   }\n//   .pagination {\n//     padding: 0.5rem;\n//   }\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass View_month extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.data = \"\";\n    this.parsed_data = [{}];\n  }\n\n  componentDidMount() {\n    const date = new Date();\n    axios.post('http://localhost:8080/view_month', localStorage.getItem(\"ssid\") + \",\" + date.toISOString(), {\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    }).then(response => this.data = response.data);\n    this.parsed_data = parse_vcal(this.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default View_month;","map":{"version":3,"sources":["/home/albert/Desktop/vsworkspace/CVWO/winter-session-assignment/frontend/src/pages/View_month.js"],"names":["React","useState","Button","Link","axios","ReactTable","styled","parse_vcal","Calendar","View_month","Component","data","parsed_data","componentDidMount","date","Date","post","localStorage","getItem","toISOString","headers","then","response","render"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,IAFqC,GAE9B,EAF8B;AAAA,SAGrCC,WAHqC,GAGzB,CAAC,EAAD,CAHyB;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,IAAI,GAAC,IAAIC,IAAJ,EAAX;AACAX,IAAAA,KAAK,CAACY,IAAN,CAAW,kCAAX,EAA8CC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA6B,GAA7B,GAAiCJ,IAAI,CAACK,WAAL,EAA/E,EAAoG;AAACC,MAAAA,OAAO,EAAC;AAAC,wBAAgB;AAAjB;AAAT,KAApG,EACCC,IADD,CACOC,QAAD,IAAa,KAAKX,IAAL,GAAUW,QAAQ,CAACX,IADtC;AAEA,SAAKC,WAAL,GAAiBL,UAAU,CAAC,KAAKI,IAAN,CAA3B;AACH;;AAEDY,EAAAA,MAAM,GAAgB;AAClB,wBAAU;AAAA,6BAyBN,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAzBM,qBAAV;AA2BH;;AAxCoC;;AA2CzC,eAAed,UAAf","sourcesContent":["//referred to some code from https://react-table.tanstack.com/docs/examples/full-width-table\n\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactTable from \"react-table\";\nimport styled from 'styled-components'\nimport {parse_vcal} from \"../vcalendar_parser.js\"\nimport Calendar from 'react-calendar';\n//import 'react-calendar/dist/Calendar.css';\n\n// const Styles = styled.div`\n//   /* This is required to make the table full-width */\n//   display: block;\n//   max-width: 100%;\n\n//   /* This will make the table scrollable when it gets too small */\n//   .tableWrap {\n//     display: block;\n//     max-width: 100%;\n//     overflow-x: scroll;\n//     overflow-y: hidden;\n//     border-bottom: 1px solid black;\n//   }\n\n//   table {\n//     /* Make sure the inner table is always as wide as needed */\n//     width: 100%;\n//     border-spacing: 0;\n\n//     tr {\n//       :last-child {\n//         td {\n//           border-bottom: 0;\n//         }\n//       }\n//     }\n\n//     th,\n//     td {\n//       margin: 0;\n//       padding: 0.5rem;\n//       border-bottom: 1px solid black;\n//       border-right: 1px solid black;\n\n//       /* The secret sauce */\n//       /* Each cell should grow equally */\n//       width: 1%;\n//       /* But \"collapsed\" cells should be as small as possible */\n//       &.collapse {\n//         width: 0.0000000001%;\n//       }\n\n//       :last-child {\n//         border-right: 0;\n//       }\n//     }\n//   }\n\n//   .pagination {\n//     padding: 0.5rem;\n//   }\n// `\n\nclass View_month extends React.Component {\n\n    data = \"\";\n    parsed_data=[{}];\n\n    componentDidMount() {\n        const date=new Date();\n        axios.post('http://localhost:8080/view_month',localStorage.getItem(\"ssid\")+\",\"+date.toISOString() , {headers:{'Content-Type': 'text/plain'}})\n        .then((response)=> this.data=response.data);\n        this.parsed_data=parse_vcal(this.data);\n    }\n\n    render() :JSX.Element {\n        return   (<>\n            {/* <table>\n                <tbody>\n                    <tr>\n                    <td>Monday</td>\n                    <td>Tuesday</td>\n                    <td>Wednesday</td>\n                    <td>Thursday</td>\n                    <td>Friday</td>\n                    <td>Saturday</td>\n                    <td>Sunday</td>\n                    </tr>\n                    {this.parsed_data.map((item, i) => (\n                        <tr key={i}>\n                        <td>{item.SUMMARY}</td>\n                        <td>{item.DTSTART}</td>\n                        <td>{item.DTEND}</td>\n                        <td>{item.DESCRIPTION}</td>\n                        <td>{item.MAILTO}</td>\n                        <td>{item.ORGANIZER}</td>\n                        <td>{item.DTSTAMP}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table> */}\n            <Calendar/>\n        </>);\n    }\n}\n\nexport default View_month;\n"]},"metadata":{},"sourceType":"module"}