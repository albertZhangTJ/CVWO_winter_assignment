{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/vsworkspace/CVWO/winter-session-assignment/frontend/src/pages/View_day.js\";\n//referred to some code from https://react-table.tanstack.com/docs/examples/full-width-table\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactTable from \"react-table\";\nimport styled from 'styled-components';\nimport { parse_vcal } from \"../vcalendar_parser.js\"; //import 'react-calendar/dist/Calendar.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = styled.table`\n  /* This is required to make the table full-width */\n  display: block;\n  max-width: 100%;\n\n  /* This will make the table scrollable when it gets too small */\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    border-bottom: 1px solid black;\n  }\n\n  table {\n    /* Make sure the inner table is always as wide as needed */\n    width: 100%;\n    border-spacing: 0;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      /* The secret sauce */\n      /* Each cell should grow equally */\n      width: 1%;\n      /* But \"collapsed\" cells should be as small as possible */\n      &.collapse {\n        width: 0.0000000001%;\n      }\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n  }\n`;\n_c = Styles;\n\nclass View_day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = \"\";\n    this.parsed_data = [{}];\n    this.year = \"\";\n    this.month = \"\";\n    this.day = \"\";\n\n    this.onSubmit = e => {\n      axios.post('http://localhost:8080/view_day', this.state.profile.year + this.state.profile.month + this.state.profile.day, {\n        headers: {\n          'Content-Type': 'text/plain'\n        }\n      }).then(function (response) {\n        this.data = response.data;\n        this.parsed_data = parse_vcal(response.data);\n      }).catch(function (error) {});\n    };\n\n    this.state = {\n      profile: {}\n    };\n    this.handleYearChange = this.handleYearChange.bind(this);\n    this.handleMonthChange = this.handleMonthChange.bind(this);\n  }\n\n  componentDidMount() {\n    const date = new Date();\n    axios.post('http://localhost:8080/view_month', localStorage.getItem(\"ssid\") + \",\" + date.toISOString(), {\n      headers: {\n        'Content-Type': 'text/plain'\n      }\n    }).then(response => this.data = response.data);\n    this.parsed_data = parse_vcal(this.data);\n    this.year = date.getFullYear().toString();\n    this.month = date.getMonth().toString();\n  }\n\n  handleYearChange(e) {\n    this.setState((state, props) => {\n      let profile = state.profile;\n      profile.year = e.target.value;\n      return {\n        profile: profile\n      };\n    });\n  }\n\n  handleMonthChange(e) {\n    this.setState((state, props) => {\n      let profile = state.profile;\n      profile.month = e.target.value;\n      return {\n        profile: profile\n      };\n    });\n  }\n\n  handleDayChange(e) {\n    this.setState((state, props) => {\n      let profile = state.profile;\n      profile.day = e.target.value;\n      return {\n        profile: profile\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search for day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.onSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"year\",\n          children: \" year \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"year\",\n          name: \"year\",\n          placeholder: \"Enter year\",\n          value: this.state.profile.year,\n          onChange: this.handleYearChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"month\",\n          children: \" month \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"month\",\n          name: \"month\",\n          placeholder: \"Enter month\",\n          value: this.state.profile.month,\n          onChange: this.handleMonthChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"day\",\n          children: \" day \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"day\",\n          name: \"day\",\n          placeholder: \"Enter day\",\n          value: this.state.profile.day,\n          onChange: this.handledayChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Styles, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Event name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Start time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"End time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Participants\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Created on\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 21\n            }, this), this.parsed_data.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.SUMMARY\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.DTSTART\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.DTEND\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.DESCRIPTION\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.MAILTO\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.ORGANIZER\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.DTSTAMP\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 25\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = \"/create_event\",\n        children: \"Create an event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = \"/view_month\",\n        children: \"View by month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default View_day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Styles\");","map":{"version":3,"sources":["/home/albert/Desktop/vsworkspace/CVWO/winter-session-assignment/frontend/src/pages/View_day.js"],"names":["React","useState","Button","Link","axios","ReactTable","styled","parse_vcal","Styles","table","View_day","Component","constructor","props","data","parsed_data","year","month","day","onSubmit","e","post","state","profile","headers","then","response","catch","error","handleYearChange","bind","handleMonthChange","componentDidMount","date","Date","localStorage","getItem","toISOString","getFullYear","toString","getMonth","setState","target","value","handleDayChange","render","handledayChange","map","item","i","SUMMARY","DTSTART","DTEND","DESCRIPTION","MAILTO","ORGANIZER","DTSTAMP","window","location","href"],"mappings":"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","sourcesContent":["//referred to some code from https://react-table.tanstack.com/docs/examples/full-width-table\n\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactTable from \"react-table\";\nimport styled from 'styled-components'\nimport {parse_vcal} from \"../vcalendar_parser.js\"\n//import 'react-calendar/dist/Calendar.css';\n\nconst Styles = styled.table`\n  /* This is required to make the table full-width */\n  display: block;\n  max-width: 100%;\n\n  /* This will make the table scrollable when it gets too small */\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    border-bottom: 1px solid black;\n  }\n\n  table {\n    /* Make sure the inner table is always as wide as needed */\n    width: 100%;\n    border-spacing: 0;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      /* The secret sauce */\n      /* Each cell should grow equally */\n      width: 1%;\n      /* But \"collapsed\" cells should be as small as possible */\n      &.collapse {\n        width: 0.0000000001%;\n      }\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n  }\n`\n\nclass View_day extends React.Component {\n\n    data = \"\";\n    parsed_data=[{}];\n    year=\"\";\n    month=\"\";\n    day=\"\"\n\n    constructor(props) {\n      super(props);\n      this.state = {\n          profile: {}\n      }\n      this.handleYearChange = this.handleYearChange.bind(this);\n      this.handleMonthChange = this.handleMonthChange.bind(this);\n    }\n\n    componentDidMount() {\n        const date=new Date();\n        axios.post('http://localhost:8080/view_month',localStorage.getItem(\"ssid\")+\",\"+date.toISOString() , {headers:{'Content-Type': 'text/plain'}})\n        .then((response)=> this.data=response.data);\n        this.parsed_data=parse_vcal(this.data);\n        this.year=date.getFullYear().toString();\n        this.month=date.getMonth().toString();\n\n    }\n\n    handleYearChange(e){\n      this.setState( (state, props) => {\n          let profile = state.profile;\n          profile.year = e.target.value;\n          return {profile: profile}\n      });\n    }\n\n    handleMonthChange(e){\n      this.setState( (state, props) => {\n          let profile = state.profile;\n          profile.month = e.target.value;\n          return {profile: profile}\n      });\n    }\n\n    handleDayChange(e){\n        this.setState( (state, props) => {\n            let profile = state.profile;\n            profile.day = e.target.value;\n            return {profile: profile}\n        });\n      }\n\n    onSubmit = (e) => {\n      axios.post('http://localhost:8080/view_day', this.state.profile.year+this.state.profile.month+this.state.profile.day, {headers:{'Content-Type': 'text/plain'}})\n          .then(function(response) {\n              this.data=response.data;\n              this.parsed_data=parse_vcal(response.data)\n          })\n          .catch(function(error) {\n          });\n    };\n\n    render() :JSX.Element {\n        return   (<>\n        <h3>Search for day</h3>\n        <form onSubmit={(e) => this.onSubmit(e)}>\n                <label for=\"year\"> year </label>\n                <input type=\"text\" id=\"year\" name=\"year\" placeholder=\"Enter year\" \n                value={this.state.profile.year}\n                onChange={this.handleYearChange} />\n                <label for=\"month\"> month </label>\n                <input type=\"text\" id=\"month\" name=\"month\" placeholder=\"Enter month\"\n                value={this.state.profile.month}\n                onChange={this.handleMonthChange} />\n                <label for=\"day\"> day </label>\n                <input type=\"text\" id=\"day\" name=\"day\" placeholder=\"Enter day\"\n                value={this.state.profile.day}\n                onChange={this.handledayChange} />\n\n                <input type=\"submit\" value=\"Submit\" />\n        </form>\n        <br/>\n        <Styles>\n             <table>\n                <tbody>\n                    <tr>\n                    <th>Event name</th>\n                    <th>Start time</th>\n                    <th>End time</th>\n                    <th>Description</th>\n                    <th>Contact</th>\n                    <th>Participants</th>\n                    <th>Created on</th>\n                    </tr>\n                    {this.parsed_data.map((item, i) => (\n                        <tr key={i}>\n                        <td>{item.SUMMARY}</td>\n                        <td>{item.DTSTART}</td>\n                        <td>{item.DTEND}</td>\n                        <td>{item.DESCRIPTION}</td>\n                        <td>{item.MAILTO}</td>\n                        <td>{item.ORGANIZER}</td>\n                        <td>{item.DTSTAMP}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table> \n        </Styles>\n        <br/><br/>\n        <button onClick={()=>window.location.href=\"/create_event\"}>\n          Create an event\n        </button>\n        <br/><br/>\n        <button onClick={()=>window.location.href=\"/view_month\"}>\n          View by month\n        </button>\n        </>);\n    }\n}\n\nexport default View_day;"]},"metadata":{},"sourceType":"module"}