{"ast":null,"code":"var _jsxFileName = \"/home/albert/Desktop/vsworkspace/CVWO/winter-session-assignment/frontend/src/pages/View_month.tsx\";\n//referred to some code from https://react-table.tanstack.com/docs/examples/full-width-table\nimport React from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { parse_vcal } from \"../vcalendar_parser.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = styled.div`\n  /* This is required to make the table full-width */\n  display: block;\n  max-width: 100%;\n\n  /* This will make the table scrollable when it gets too small */\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    border-bottom: 1px solid black;\n  }\n\n  table {\n    /* Make sure the inner table is always as wide as needed */\n    width: 100%;\n    border-spacing: 0;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      /* The secret sauce */\n      /* Each cell should grow equally */\n      width: 1%;\n      /* But \"collapsed\" cells should be as small as possible */\n      &.collapse {\n        width: 0.0000000001%;\n      }\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n  }\n`;\n\nclass View_month extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.data = \"\";\n    this.parsed_data = [{}];\n  }\n\n  componentDidMount() {\n    const date = new Date();\n    axios({\n      method: 'get',\n      url: 'http://localhost:8080/view_month',\n      headers: {\n        \"Content-Type\": \"text/plain\"\n      },\n      data: localStorage.getItem('ssid') + \",\" + date.toISOString()\n    }).then(response => this.data = response.data);\n    this.parsed_data = parse_vcal(this.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Monday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Tuesday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Wednesday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Thursday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Friday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Saturday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Sunday\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default View_month;","map":{"version":3,"sources":["/home/albert/Desktop/vsworkspace/CVWO/winter-session-assignment/frontend/src/pages/View_month.tsx"],"names":["React","axios","styled","parse_vcal","Styles","div","View_month","Component","data","parsed_data","componentDidMount","date","Date","method","url","headers","localStorage","getItem","toISOString","then","response","render"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAgC,OAAhC;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,UAAR,QAAyB,wBAAzB;;;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnDA;;AAqDA,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,IAFqC,GAE9B,EAF8B;AAAA,SAGrCC,WAHqC,GAGzB,CAAC,EAAD,CAHyB;AAAA;;AAKrCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,IAAI,GAAC,IAAIC,IAAJ,EAAX;AACAX,IAAAA,KAAK,CAAC;AACFY,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE,kCAFH;AAGFC,MAAAA,OAAO,EAAC;AAAC,wBAAe;AAAhB,OAHN;AAIFP,MAAAA,IAAI,EAAEQ,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA6B,GAA7B,GAAiCN,IAAI,CAACO,WAAL;AAJrC,KAAD,CAAL,CAKGC,IALH,CAKSC,QAAD,IAAa,KAAKZ,IAAL,GAAUY,QAAQ,CAACZ,IALxC;AAMA,SAAKC,WAAL,GAAiBN,UAAU,CAAC,KAAKK,IAAN,CAA3B;AACH;;AAEDa,EAAAA,MAAM,GAAgB;AAClB,wBAAU;AAAA,6BACN;AAAA,+BACI;AAAA,iCACI;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADM,qBAAV;AAgBH;;AAjCoC;;AAoCzC,eAAef,UAAf","sourcesContent":["//referred to some code from https://react-table.tanstack.com/docs/examples/full-width-table\n\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport ReactTable from \"react-table\";\nimport styled from 'styled-components'\nimport {parse_vcal} from \"../vcalendar_parser.js\"\n\nconst Styles = styled.div`\n  /* This is required to make the table full-width */\n  display: block;\n  max-width: 100%;\n\n  /* This will make the table scrollable when it gets too small */\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    border-bottom: 1px solid black;\n  }\n\n  table {\n    /* Make sure the inner table is always as wide as needed */\n    width: 100%;\n    border-spacing: 0;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      /* The secret sauce */\n      /* Each cell should grow equally */\n      width: 1%;\n      /* But \"collapsed\" cells should be as small as possible */\n      &.collapse {\n        width: 0.0000000001%;\n      }\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n  }\n`\n\nclass View_month extends React.Component {\n\n    data = \"\";\n    parsed_data=[{}];\n\n    componentDidMount() {\n        const date=new Date();\n        axios({\n            method: 'get',\n            url: 'http://localhost:8080/view_month',\n            headers:{\"Content-Type\":\"text/plain\"},\n            data: localStorage.getItem('ssid')+\",\"+date.toISOString()\n        }).then((response)=> this.data=response.data);\n        this.parsed_data=parse_vcal(this.data);\n    }\n\n    render() :JSX.Element {\n        return   (<>\n            <table>\n                <tbody>\n                    <tr>\n                    <td>Monday</td>\n                    <td>Tuesday</td>\n                    <td>Wednesday</td>\n                    <td>Thursday</td>\n                    <td>Friday</td>\n                    <td>Saturday</td>\n                    <td>Sunday</td>\n                    </tr>\n                    \n                </tbody>\n            </table>\n        </>);\n    }\n}\n\nexport default View_month;\n"]},"metadata":{},"sourceType":"module"}